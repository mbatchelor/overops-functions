<?xml version='1.0' encoding='utf-8'?>
<udf_manifest>
   <version>1.0</version> 
   <library_name>overops-public-lib</library_name>
   <backwards_compatible>true</backwards_compatible>
   <functions>
	   <function>
	      <function_type>CHANNEL</function_type>
	      <function_name>apply-label</function_name>
	      <description>Applies a specific input label to events</description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.common.udf.label.ApplyLabelFunction</class_file>
	   </function>
	   <function>
	      <function_type>ANOMALY</function_type>
	      <function_name>Relative Threshold</function_name>
	      <description>Compare the volume of events within the view against a target threshold and rate. The rate is defined as number of events  / throughput, and can be set anywhere between 1- 100. Throughput can set as the number of times the method containing the event was called, or the number of times the application thread calling in which the event took place executed.</description>
	      <param_type>TEXT</param_type>
	      <class_file>com.takipi.common.udf.volume.RelativeThresholdFunction</class_file>
	      <default_params>
	      	# Defines a target threshold that if the volume of events within the views exceeds will constitute an anomaly.
	      	threshold = 100

	      	# A percentage value between 1 and 100 against which the volume of events / throughput is compared.
	      	rate = 5

	      	# Compare the number of times application threads (e.g. Servlet, Actor, Future,..) containing the events matching the target views have executed  against the number of events occurring. For example, if a Servlet containing the events within the view was invoked a 1000 times and 20 events matching the viewâ€™s filter took place, a RATE value above 2 will invoke an alert.
	      	relative_to = Thread_Calls

	      	# Compare the number of times the application method containing the events was invoked against the number of events which occurred. 
	      	# relative_to = Method_Calls

	      	# Time period to look at, in minutes.
	      	timespan = 60
	      </default_params>
	   </function>
	</functions>
</udf_manifest>
